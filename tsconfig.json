// {
//   "compilerOptions": {
//     /* Visit https://aka.ms/tsconfig to read more about this file */

//     /* Language and Environment */
//     "target": "ES2022" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,

//     /* Modules */
//     "module": "NodeNext" /* Must be "NodeNext" when moduleResolution is "NodeNext" */,
//     "moduleResolution": "NodeNext" /* Ensure Node.js-style module resolution for ES modules */,
//     "lib": ["ESNext", "DOM", "DOM.Iterable", "ESNext.Disposable"],

//     /* JavaScript Support */
//     // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
//     // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
//     // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */

//     /* Emit */
//     "outDir": "./dist" /* Specify an output folder for all emitted files. */,
//     "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
//     "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

//     /* Type Checking */
//     "strict": true /* Enable all strict type-checking options. */,
//     "skipLibCheck": true /* Skip type checking all .d.ts files. */
//   },
//   "include": ["src/**/*.ts"],
//   "exclude": ["node_modules"]
// }

{
  "compilerOptions": {
    "lib": ["ESNext", "DOM", "DOM.Iterable", "ESNext.Disposable"],
    "module": "NodeNext",
    // Apparently this has to be ES2022 or below for `using`/`disposable` to work???
    // https://medium.com/@bagherani/ecmascript-explicit-resource-management-early-implementation-in-typescript-5-2-5e4d08b2aee3
    "target": "ES2022",
    "moduleResolution": "NodeNext",
    "strict": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "allowJs": true,
    "incremental": true,
    "isolatedModules": true,
    "noEmit": false,
    "noEmitOnError": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "outDir": "dist",
    // NOTE: the Zen folder needs to be separate from Src so the new Root is the base folder.
    // You have to specify this, otherwise Typescript will invisibly change the root path to whatever
    // the highest common subfolder is. So if you ever import from something outside of `src` it'll invisibly change
    // this without telling you. Thus, best to be explicit!!
    "rootDir": "./",
    "sourceMap": true,
    "inlineSources": true,
    // Set `sourceRoot` to  "/" to strip the build path prefix
    // from generated source code references.
    // This improves issue grouping in Sentry.
    "sourceRoot": "/",
    // "plugins": [
    //   {
    //     "transform": "typia/lib/transform"
    //   }
    // ],
    "strictNullChecks": true
  },
  // Do we need to include zen here explicitly? IDK! It works without it??
  "include": ["src/**/*.ts", "index.ts"],
  "exclude": ["node_modules"]
}
